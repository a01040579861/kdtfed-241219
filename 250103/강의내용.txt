CSS3

Cascading Style Sheet
>html에 css속성을 적용하는 3가지 방법
- 인라인 스타일 (해당 태그 안에 style속성을 주어서 css를 적용을 하는 것)
- 내부 스타일 (<head></head> 안쪽에 style 태그를 선언하여 css 를 적용하는 것)
- 외부 스타일 (* 실무에서 가장 많이 사용 (styles.css 파일을 생성하여 css 속성을 만들고 메인 html파일안에서 link로 스타일시트를 적용시키는 것))

1. 선택자 (id,class)
1) 전체 선택자 : * (reset css)(전체를 선택)
-html 문서 내 모든 태그를 전체 찾아와서 스타일을 적용하고자 할때
- 태그 선택자(태그를 선택) : html을 통해서 입력한 태그명을 그대로 가져와서 스타일을 적용할 때
- 아이디 선택자 : html 문서상에 id라는 속성을 부여하고 해당 id 속성값을 활용해서 선택자로 사용하는 것
- 클래스 선택자 : html 문서상에 class 라는 속성을 부여하고 class 속성값을 활용해서 선택자로 사용하는 것
- 속성 선택자 : html 태그 내 속성을 구분하여 스타일 선택자로 사용하는 것 (&[type="text"] {color: #fff;})
- 후손/자손 선택자 : 후손은 자손을 포함한 모든 자식요소들을 의미하며 자손은 부모요소의 직계 자식만을 의미한다.
자손은 후손안에 포함되는 개념
- 동위 선택자 : 동일한 부모 밑에 복수의 형제가 존재 할 때 특정 형제를 기준으로 다음번 혹은 복수의 형제를 선택자로 찾아오고 싶을 때 사용
1 - 특정 형제의 바로 다음번째 형제를 찾아올 때 ( #test + li )
2 - 특정 형제 아래 모든 형제들을 찾아올 때 ( #test ~ li )
- 반응 선택자 : 사용자의 이벤트로 인해서 태그가 반응할 때 스타일 속성을 줄 수 있는 선택자
- 상태 선택자 : html 태그 안에 상태를 정의 할 수 있는 태그들이 존재하는데 해당 태그들의 상태에 따라서 스타일 속성을 상이하게 적용하고자 할 때
form > checkbox & radio
form > input
- 구조 선택자
1) 일반 구조선택자 : 특정 부모 밑에 자식요소들이 모두 같은 경우에 사용가능
- first-child
- last-child
- nth-child(2n // 2n + 1)
- nth-child(even // odd)
- first-of-type
- last-of-type
- nth-of-type(2n // 2n + 1)
- nth-of-type((even // odd)

3) 문자 선택자
1) 전(前) 문자 선택자
- 특정 테스트 혹은 태그 요소를 작성한 후 해당 요소 앞쪽( 좌 / 상대적 앞쪽 = Z축을 기준으로 의미 ) 에 어떤 문자 혹은 태그 등을 만들어서 삽입하고자 싶을 때
2) 후(後) 문자 선택자
- 특정 텍스트 혹은 태그 요소를 작성한 후 해당 요소 뒤쪽 ( 우 / 상대적 뒤쪽 = Z축을 기준으로 의미 ) 에 어떤 문자 혹은 태그등을 만들어서 삽입하고자 할 때
3) 전후 문자 선택자
- ::before
- ::after
> 반드시 내부에 (content:"") << 반드시 존재해야 함


4) 링크 선택자: a태그 안에 링크 여부에 따라서 스타일 속성을 부여 해주는 선택자
5) 부정 선택자: 개발자가 선택한 요소의 반대가 되는 요소들에게만 스타일 속성을 부여할 때 사용할 수 있는 선택자

*태그
- h/p/a/img/video/audio/table/li/form

*선택자
-전체선택자
-태그선택자
-ID선택자
-class선택자
-속성선택자
-후손/자손선택자
-동위선택자
-반응선택자
-상태선택자
-일반구조/형태구조 선택자
-문자선택자
-링크 선택자
-부정선택자
*Semanic
*공간분할태그

- CSS 단위
statcounter (웹페이지 사이즈 기준 사이트)
가산혼합 : 색을 더할수록 하얀색에 수렴
*웹 화면 출력색상 : RGB기법
RGB (Red Green Blue) => 색의 3원색

#f00 => ff0000 빨강
#0f0 => 00ff00 초록
#00f => 0000ff 파랑

2의 4제곱 2의 4제곱 => 2의 8제곱 => 256
> 바이너리 코드 : 0,1 => bit
> 8개의 bit => 1byte = 2의 8제곱
> 웹 색조합 => 1byte

#ff ff ff => 흰색
#fff
#f00을 rgb값으로 한다면
f에 가까울수록 색이 진해지며 0에 가까울수록 색은 연해진다.
rgb(255,0,0)
rgba(255,0,0, 1)

16진수 가장 큰 숫자 : f
0~9 a~f
=> Hex코드
=> 6각형 => Hexagon

> px : 고정단위
- 다양해진 device
- 처음부터 독립적인 device UI 구현 목적
- 16px(기본적인 px)

> em : element = 요소
- 부모요소를 기준으로 배수 계산

> rem : root element = 최고 뿌리 요소
- body 요소에 폰트사이즈 값을 적용하고 모든 요소들은 body를 기준으로 배수 계산

> % :  width || height 정의하고자 할 때
- 가변그리드 : 부모요소의 전체 너비가 변경될 때 해당 값에 비례해서 margin 혹은 padding 의 간격도 변경되게 하고자 할 때 적용할 수 있는 단위

- 만약, 부모 혹은 자식 요소 중에 height의 값이 적용된 적이 없다면, 그때는 height : 100%는 그냥 자식요소의 기본 높이값만큼을 의미한다.

-만약, 자식 요소 중에 height 값을 인위적으로 적용하게 된다면, height : 100%는 자식요소의 높이값을 적용한 높이값만큼으로 변경된다.

-부모 요소의 높이값이 구체적으로 정해진 상황에서는 height의 값을 가변적으로 변경했을 때 적용 

> vw : viewport width => 사용자의 눈에 보여지는 공간에서의 총 너비 면적

> vh : viewport height => 사용자의 눈에 보여지는 공간에서의 총 높이 면적

>max-width // max-height

>min-width // min-height 
- 부모요소의 너비값이 줄어들 때 같이 비례해서 줄어들더라도 

- CSS 속성
> 단위

> 색상

> 가시속성

- display : 
-block : none 이라는 속성의 반대의미를 가지고 있는 속성

-inline : 특정 요소가 보여질 수 있도록 하는 속성

-inline-block : 
> 특정 요소가 보여질 수 있도록 하는 속성
> 만약 inline-block 속성안에 담겨있는 요소들이 하나의 행을 벗어나는 경우에는 block처럼 독립적으로 사용
> 만약 inline-block 속성안에 담겨있는 요소들이 하나의 행 안에서 소화될 수 있는 경우에는 inline처럼 같이 한 행을 공유해서 사용

inline vs inline-bloc
1) 너비, 높이 값을 적용받을 수 있는가?
2) 마진, 패딩 값을 어디까지 적용받을 수 있는가?

-none : 특정 요소를 보이지 않도록 && 공간을 없애는 속성

- visivility : 공간을 유지한 상태로 보이지 않게 하는 속성

> 박스속성
- margin : 특정 요소 바깥 공간 (*여백)을 얼만큼 부여할 것인가에 대한 스타일 속성
- padding : 특정 요소 내부 공간(*여백)을 얼만큼 부여할 것인가에 대한 스타일 속성
- box-sizing

> 테두리 = border 속성

> 배경속성 => background 

> 폰트속성 => 
font-size
font-family
font-style
font-weight
font-height


- Responsive 개념
> Flex
> Grid

- CSS 애니메이션
> transition
> transform
> animation

- SCSS 이론 & 실습







2. 속성

3. 변환/전환/애니메이션