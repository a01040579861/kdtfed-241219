1.변수

2.자료형

3.연산자

4.조건문

5.반복문

6.함수

7.DOM

8.EVENT

9.객체

10.생성자함수

11.Class

14.문자열
- charAt(i) = 문자열[i]

- indexOf(문자열, 몇 번째 그룹인지)

- startsWith(문자열, 인덱스 위치) => 해당 문자열로 시작하는지에 대한 여부를 boolean(논리형)값으로 판단 및 반환 

- endsWith(문자열, 문자열의 길이) => 해당 문자열로 종료되는지에 대한 여부를 boolean(논리형)값으로 판단 및 반환

- includes(문자열) => 해당 문자열이 있으면 true, 없으면 false값을 반환

- trim(문자열) => 특정 문자열의 앞, 뒤에 여백을 없애고자 할 때 사용 

- trimStart(문자열) => 특정 문자열의 앞 여백을 없애고자 할 때 사용

- trimEnd(문자열) => 특정 문자열의 뒤 여백을 없애고자 할 때 사용

- toUpperCase() => 모든 문자열을 대문자로 변경

- toLowerCase() => 모든 문자열을 소문자로 변경

- substring(1번 인자, 2번 인자) => 만약 1번 인자만 존재한다면, 1번 인자부터 해당 문자열의 마지막까지 모두 추출 // 2번 인자가 있다면, 2번 인자값보다 하나 적은 인덱스까지를 의미!!! => 1번 인자값으로 음수로 받게 되는 경우, 무조건 1번 인자값을 0으로 인식

- slice(1번 인자, 2번 인자) => 만약 1번 인자만 존재한다면, 1번 인자부터 해당 문자열의 마지막까지 모두 추출 // 2번 인자가 있다면, 2번 인자값보다 하나 적은 인덱스까지를 의미!!! => 1번 인자값으로 음수를 받을 수 있음

- split(구분자) => 특정 문자열에서 해당 구분자를 기준으로 각각 아이템을 구성해서 새로운 배열로 만들어주는 메서드 함수

> 포트폴리오 준비

열심히 하는 친구 // 열정적인 친구

> 현실적으로 과정을 수료한 이후 1개월 내 취업을 목표로 한다면 어디까지 배워야 합니까?

> 실력 > 1개월 내
> 네카라쿠배
> 중소기업 // 퍼플리셔 + 프론트엔드 기반

> 
HTML
CSS
JS
TS
REACT
NEXT.JS
GSAP
FRAMER MOTION

결론 : 
취업 x

외부 의견 : 친구, 동료, 선배
> node.js 

수료 > 포폴 x




